name: CI/CD Pipeline
on: [push, pull_request, workflow_dispatch]

jobs:
  verify:
    env:
      GO111MODULE: on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: configuring system for go project
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      
      - name: install dependencies
        run: |
          go mod download
          curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.21.0

      - name: linting
        run: golangci-lint run
      
      - name: fmtcheck
        run: make fmtcheck

  test:
    runs-on: ubuntu-latest
    steps:
      - name: setup extensions
        uses: actions/checkout@v1

      - name: running unit tests
        run: make test-cov

      - name: pushing code coverage report to codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: |
          curl -s https://codecov.io/bash > $HOME/codecov-bash.sh && chmod +x $HOME/codecov-bash.sh
          build/publishCodeCoverage.sh

      - name: running integration tests
        env:
          ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
          FINDINGS_ENV: ${{ secrets.FINDINGS_ENV }}
          NOTIFICATIONS_ENV: ${{ secrets.NOTIFICATIONS_ENV }}
          CONFIGURATION_GOVERNANCE_ENV: ${{ secrets.CONFIGURATION_GOVERNANCE_ENV }}
          RESOURCE_GROUP_ID: ${{ secrets.RESOURCE_GROUP_ID }}
        run: build/testScript.sh

  release:
    runs-on: ubuntu-latest
    needs: [verify, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: setup extensions
        uses: actions/checkout@v1

      - name: setup nodejs
        uses: actions/setup-node@v2
        with:
          node-version: '12'

      - name: release using semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          GIT_AUTHOR_NAME: sccdeveloper
          GIT_AUTHOR_EMAIL: scccomm@in.ibm.com
          GIT_COMMITTER_NAME: sccdeveloper
          GIT_COMMITTER_EMAIL: scccomm@in.ibm.com
        run: |
          sudo apt-get update
          sudo apt-get install python
          pip install --user bumpversion
          npm install @semantic-release/changelog
          npm install @semantic-release/exec
          npm install @semantic-release/git
          npm install @semantic-release/github
          npx semantic-release

  documentation:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: setup extensions
        uses: actions/checkout@v1

      - name: generate gopages
        run: go run github.com/johnstarich/go/gopages -base https://ibm.github.io/scc-go-sdk
      
      - name: deploy gopages to gh-pages
        uses: crazy-max/ghaction-github-pages@v1
        with:
          target_branch: gh-pages
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          GIT_AUTHOR_NAME: sccdeveloper
          GIT_AUTHOR_EMAIL: scccomm@in.ibm.com
          GIT_COMMITTER_NAME: sccdeveloper
          GIT_COMMITTER_EMAIL: scccomm@in.ibm.com
